import BaseAnimal from "./BaseAnimal";

type RaceResult = [string, number];

export default class RaceController {
    
    public static collectResults(animals: BaseAnimal[]): RaceResult[] {
        console.log("--- B·∫Øt ƒë·∫ßu cu·ªôc ƒëua! ---");
        return animals.map(animal => {
            const speed = animal.getSpeed();
            console.log(`${animal.name} ƒë·∫°t t·ªëc ƒë·ªô: ${speed}`);
            return [animal.name, speed];
        });
    }

    public static findMaxSpeed(results: RaceResult[]): number {
        return results.reduce((max, current) => {
            const speed = current[1];
            return speed > max ? speed : max;
        }, 0);
    }

    public static findWinners(results: RaceResult[], maxSpeed: number): string[] {
        return results
            .filter(result => result[1] === maxSpeed)
            .map(result => result[0]);
    }

    public static printResults(results: RaceResult[], winners: string[], maxSpeed: number): void {
        console.log("\n--- K·∫æT QU·∫¢ CHUNG CU·ªòC ---");
        
        if (winners.length === 1) {
            console.log(`\nüèÜ Ng∆∞·ªùi chi·∫øn th·∫Øng l√†: ${winners[0]}`);
        } else if (winners.length > 1) {
            console.log(`\nüèÅ Cu·ªôc ƒëua h√≤a! Ng∆∞·ªùi chi·∫øn th·∫Øng l√†: ${winners.join(" v√† ")}`);
        } else {
             console.log("\nKh√¥ng c√≥ k·∫øt qu·∫£ h·ª£p l·ªá.");
        }
        
        console.log(`T·ªëc ƒë·ªô th·∫Øng cu·ªôc: ${maxSpeed}`);
    }
}